// Problem 44
// ==========


//    Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first
//    ten pentagonal numbers are:

//                   1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

//    It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
//    difference, 70 − 22 = 48, is not pentagonal.

//    Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
//    and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is
//    the value of D?


function nthPentagonal(n) {
    return n*(3*n-1)/2
}

function isPentagonal(i) {
    return Number.isInteger((1 + Math.sqrt(1+24*i))/6)
}

function modulo(n) {
    if(n<0)
        return -n
    return n
}

let pent = []

// Increased I until solution found, then tested
for(let i=1; i<3000; i++) {
    pent.push(nthPentagonal(i))
}

let min = Number.POSITIVE_INFINITY
let x = undefined
let y = undefined

for(i in pent) {
    for(j in pent) {
        if(isPentagonal(pent[i] + pent[j]) && isPentagonal(modulo(pent[i] - pent[j])) && modulo(pent[i] - pent[j]) < min) {
            min = modulo(pent[i] - pent[j])
            x = pent[i]
            y = pent[j]
            console.log('x: ' + x + ', y: ' + y)
            console.log('diff: ' + modulo(x-y))
        }
    }
}

console.log('x: ' + x)
console.log('y: ' + y)
console.log(modulo(x-y))